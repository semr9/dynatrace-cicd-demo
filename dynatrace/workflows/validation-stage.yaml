# Dynatrace Workflow for Validation Stage Automation
# Monitors production readiness and validation

workflow:
  name: "Production Readiness Validation"
  description: "Validates production readiness before deployment"
  trigger:
    type: "schedule"
    schedule: "0 */1 * * *" # Every hour
  tasks:
    - name: "check_system_health"
      type: "DQL"
      query: |
        fetch logs
        | filter log.source == "health-check"
        | filter content contains "HEALTH_CHECK"
        | summarize health_status = any(content) by timestamp
      action:
        type: "conditional"
        conditions:
          - when: "result.health_status contains 'UNHEALTHY'"
            then:
              - name: "block_production_deployment"
                type: "HTTP"
                config:
                  url: "https://app.harness.io/api/pipelines/${PIPELINE_ID}/executions/${EXECUTION_ID}/pause"
                  method: "POST"
                  headers:
                    Authorization: "Bearer ${HARNESS_TOKEN}"
              - name: "alert_health_check_failure"
                type: "SLACK"
                config:
                  webhook: "${SLACK_WEBHOOK}"
                  message: "Health check failed. Production deployment blocked."
                  channel: "#production-alerts"

---
# Capacity Validation Workflow
workflow:
  name: "Capacity Validation"
  description: "Validates system capacity before production deployment"
  trigger:
    type: "schedule"
    schedule: "0 */4 * * *" # Every 4 hours
  tasks:
    - name: "check_resource_capacity"
      type: "DQL"
      query: |
        fetch metrics
        | filter metricId == "builtin:host.memory.usage"
        | summarize memory_usage = avg(value) by timestamp
        | filter memory_usage > 85
      action:
        type: "conditional"
        conditions:
          - when: "result.memory_usage > 85"
            then:
              - name: "request_capacity_increase"
                type: "HTTP"
                config:
                  url: "https://api.aws.amazon.com/autoscaling/v1/auto-scaling-groups/${ASG_NAME}/scale"
                  method: "POST"
                  headers:
                    Authorization: "Bearer ${AWS_TOKEN}"
                  body: '{"desired_capacity": 5}'
              - name: "notify_capacity_issue"
                type: "SLACK"
                config:
                  webhook: "${SLACK_WEBHOOK}"
                  message: "Memory usage high. Auto-scaling triggered."
                  channel: "#capacity-alerts"

---
# Security Validation Workflow
workflow:
  name: "Security Validation"
  description: "Validates security compliance before production deployment"
  trigger:
    type: "schedule"
    schedule: "0 0 * * *" # Daily
  tasks:
    - name: "check_security_compliance"
      type: "DQL"
      query: |
        fetch logs
        | filter log.source == "security-scan"
        | filter content contains "SECURITY_SCAN"
        | summarize security_status = any(content) by timestamp
      action:
        type: "conditional"
        conditions:
          - when: "result.security_status contains 'VULNERABILITY_FOUND'"
            then:
              - name: "block_deployment_security"
                type: "HTTP"
                config:
                  url: "https://app.harness.io/api/pipelines/${PIPELINE_ID}/executions/${EXECUTION_ID}/abort"
                  method: "POST"
                  headers:
                    Authorization: "Bearer ${HARNESS_TOKEN}"
              - name: "create_security_ticket"
                type: "HTTP"
                config:
                  url: "https://api.jira.com/issue"
                  method: "POST"
                  headers:
                    Authorization: "Bearer ${JIRA_TOKEN}"
                  body: '{"fields":{"project":{"key":"SEC"},"summary":"Security vulnerability found","description":"Deployment blocked due to security scan failure"}}'
              - name: "alert_security_issue"
                type: "SLACK"
                config:
                  webhook: "${SLACK_WEBHOOK}"
                  message: "Security vulnerability found. Deployment blocked."
                  channel: "#security-alerts"

---
# Business Metrics Validation
workflow:
  name: "Business Metrics Validation"
  description: "Validates business metrics and KPIs"
  trigger:
    type: "schedule"
    schedule: "0 */6 * * *" # Every 6 hours
  tasks:
    - name: "check_business_metrics"
      type: "DQL"
      query: |
        fetch metrics
        | filter metricId == "custom:ecommerce.order.success_rate"
        | summarize success_rate = avg(value) by timestamp
        | filter success_rate < 95
      action:
        type: "conditional"
        conditions:
          - when: "result.success_rate < 95"
            then:
              - name: "alert_business_metrics"
                type: "SLACK"
                config:
                  webhook: "${SLACK_WEBHOOK}"
                  message: "Order success rate below threshold: ${success_rate}%"
                  channel: "#business-alerts"
              - name: "create_business_report"
                type: "HTTP"
                config:
                  url: "https://api.dynatrace.com/v2/analyze/business-metrics"
                  method: "GET"
                  headers:
                    Authorization: "Api-Token ${DYNATRACE_TOKEN}"
