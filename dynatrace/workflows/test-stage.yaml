# Dynatrace Workflow for Test Stage Automation
# Monitors test execution and performance

workflow:
  name: "Test Stage Monitoring"
  description: "Monitors test execution and performance metrics"
  trigger:
    type: "log"
    conditions:
      - logSource: "test-runner"
        query: "content CONTAINS 'TEST_EXECUTION'"
  tasks:
    - name: "monitor_test_execution"
      type: "DQL"
      query: |
        fetch logs
        | filter log.source == "test-runner"
        | filter content contains "TEST" and (content contains "PASS" or content contains "FAIL")
        | summarize test_results = any(content) by timestamp
      action:
        type: "conditional"
        conditions:
          - when: "result.test_results contains 'FAIL'"
            then:
              - name: "stop_pipeline_on_test_failure"
                type: "HTTP"
                config:
                  url: "https://app.harness.io/api/pipelines/${PIPELINE_ID}/executions/${EXECUTION_ID}/abort"
                  method: "POST"
                  headers:
                    Authorization: "Bearer ${HARNESS_TOKEN}"
              - name: "generate_test_report"
                type: "HTTP"
                config:
                  url: "https://api.dynatrace.com/v2/analyze/tests"
                  method: "GET"
                  headers:
                    Authorization: "Api-Token ${DYNATRACE_TOKEN}"
              - name: "notify_test_failure"
                type: "SLACK"
                config:
                  webhook: "${SLACK_WEBHOOK}"
                  message: "Tests failed in pipeline. Execution stopped."
                  channel: "#qa-alerts"

---
# Performance Test Monitoring
workflow:
  name: "Performance Test Monitoring"
  description: "Monitors performance test results and SLA compliance"
  trigger:
    type: "schedule"
    schedule: "0 */2 * * *" # Every 2 hours during test phase
  tasks:
    - name: "check_performance_sla"
      type: "DQL"
      query: |
        fetch metrics
        | filter metricId == "builtin:service.response.time"
        | filter service.name == "ecommerce-api-gateway"
        | summarize avg_response_time = avg(value) by timestamp
        | filter avg_response_time > 1000
      action:
        type: "conditional"
        conditions:
          - when: "result.avg_response_time > 1000"
            then:
              - name: "alert_performance_degradation"
                type: "SLACK"
                config:
                  webhook: "${SLACK_WEBHOOK}"
                  message: "Performance SLA violated. Response time exceeded 1 second."
                  channel: "#performance-alerts"
              - name: "create_performance_incident"
                type: "HTTP"
                config:
                  url: "https://api.dynatrace.com/v2/problems"
                  method: "POST"
                  headers:
                    Authorization: "Api-Token ${DYNATRACE_TOKEN}"
                  body: '{"title":"Performance SLA Violation","description":"Response time exceeded threshold"}'

---
# Test Data Generation Workflow
workflow:
  name: "Test Data Generation"
  description: "Generates test data for comprehensive testing"
  trigger:
    type: "manual"
  tasks:
    - name: "generate_test_users"
      type: "HTTP"
      config:
        url: "http://user-service:3001/api/users/generate-test-data"
        method: "POST"
        headers:
          Content-Type: "application/json"
        body: '{"count": 100}'
    - name: "generate_test_products"
      type: "HTTP"
      config:
        url: "http://product-service:3002/api/products/generate-test-data"
        method: "POST"
        headers:
          Content-Type: "application/json"
        body: '{"count": 50}'
    - name: "simulate_test_orders"
      type: "HTTP"
      config:
        url: "http://order-service:3003/api/orders/generate-test-data"
        method: "POST"
        headers:
          Content-Type: "application/json"
        body: '{"count": 200}'
