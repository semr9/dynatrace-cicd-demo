apiVersion: v1
kind: ConfigMap
metadata:
  name: ecommerce-config
  namespace: ecommerce-demo
data:
  NODE_ENV: "production"
  DATABASE_URL: "postgresql://postgres:password@postgres-service:5432/ecommerce"
  USER_SERVICE_URL: "http://user-service:3001"
  PRODUCT_SERVICE_URL: "http://product-service:3002"
  ORDER_SERVICE_URL: "http://order-service:3003"
  PAYMENT_SERVICE_URL: "http://payment-service:3004"
  JWT_SECRET: "your-jwt-secret-here-change-in-production"
  LOG_LEVEL: "info"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-init
  namespace: ecommerce-demo
data:
  init.sql: |
    -- Create database and tables for E-commerce Demo
    CREATE TABLE IF NOT EXISTS users (
        id SERIAL PRIMARY KEY,
        username VARCHAR(50) UNIQUE NOT NULL,
        email VARCHAR(100) UNIQUE NOT NULL,
        password_hash VARCHAR(255) NOT NULL,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    );

    CREATE TABLE IF NOT EXISTS products (
        id SERIAL PRIMARY KEY,
        name VARCHAR(100) NOT NULL,
        description TEXT,
        price DECIMAL(10,2) NOT NULL,
        stock_quantity INTEGER DEFAULT 0,
        image_url VARCHAR(255),
        category VARCHAR(50),
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    );

    CREATE TABLE IF NOT EXISTS orders (
        id SERIAL PRIMARY KEY,
        user_id INTEGER REFERENCES users(id),
        total_amount DECIMAL(10,2) NOT NULL,
        status VARCHAR(20) DEFAULT 'pending',
        shipping_address TEXT,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    );

    CREATE TABLE IF NOT EXISTS order_items (
        id SERIAL PRIMARY KEY,
        order_id INTEGER REFERENCES orders(id),
        product_id INTEGER REFERENCES products(id),
        quantity INTEGER NOT NULL,
        price DECIMAL(10,2) NOT NULL,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    );

    CREATE TABLE IF NOT EXISTS cart (
        id SERIAL PRIMARY KEY,
        user_id INTEGER REFERENCES users(id),
        product_id INTEGER REFERENCES products(id),
        quantity INTEGER NOT NULL,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    );

    CREATE TABLE IF NOT EXISTS payments (
        id SERIAL PRIMARY KEY,
        order_id INTEGER REFERENCES orders(id),
        transaction_id VARCHAR(100) UNIQUE NOT NULL,
        amount DECIMAL(10,2) NOT NULL,
        payment_method VARCHAR(50) DEFAULT 'credit_card',
        status VARCHAR(20) NOT NULL,
        processed_at TIMESTAMP,
        refund_of INTEGER REFERENCES payments(id),
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    );

    -- Insert sample data
    INSERT INTO products (name, description, price, stock_quantity, category) VALUES
    ('MacBook Pro 16"', 'High-performance laptop for professionals', 2499.99, 25, 'Electronics'),
    ('iPhone 15 Pro', 'Latest generation smartphone', 999.99, 50, 'Electronics'),
    ('AirPods Pro', 'Wireless earbuds with noise cancellation', 249.99, 100, 'Electronics'),
    ('Samsung 4K Monitor', '32-inch 4K UHD monitor', 399.99, 30, 'Electronics'),
    ('Mechanical Keyboard', 'RGB mechanical keyboard', 149.99, 75, 'Electronics')
    ON CONFLICT DO NOTHING;

    INSERT INTO users (username, email, password_hash) VALUES
    ('demo_user', 'demo@example.com', '$2a$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi')
    ON CONFLICT (email) DO NOTHING;
